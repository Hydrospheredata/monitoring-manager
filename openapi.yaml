openapi: 3.0.3
info:
  title: Monitoring manager
  version: v1
paths:
  /api/v1/plugin:
    get:
      tags:
      - Plugin
      description: List all registered plugins
      operationId: pluginList
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plugin'
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - Plugin
      description: Register a new plugin
      operationId: pluginAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /api/v1/model:
    get:
      tags:
      - Model
      description: List all registered models
      operationId: modelList
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Model'
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - Model
      description: Register new model
      operationId: modelAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /api/v1/model/{modelName}/{modelVersion}/reports:
    get:
      tags:
      - Model
      operationId: listAssociatedReports
      parameters:
      - name: modelName
        in: path
        required: true
        schema:
          type: string
      - name: modelVersion
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: 'Invalid value for: path parameter modelVersion'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /api/v1/plugin-proxy/{pluginName}:
    get:
      tags:
      - Plugin proxy
      operationId: proxyRequest
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: 'Invalid value, Invalid value for: headers, Invalid value for:
            path, Invalid value for: query parameters, Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /api/v1/report:
    get:
      tags:
      - Report
      operationId: getReportDesc
      parameters:
      - name: modelName
        in: query
        required: true
        schema:
          type: string
      - name: modelVersion
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: file
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '400':
          description: 'Invalid value for: query parameter modelName, Invalid value
            for: query parameter modelVersion, Invalid value for: query parameter
            file'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    ByFeature:
      required:
      - description
      - isGood
      type: object
      properties:
        description:
          type: string
        isGood:
          type: boolean
    ByRow:
      required:
      - rowId
      - col
      - description
      - isGood
      - value
      type: object
      properties:
        rowId:
          type: integer
          format: int64
        col:
          type: string
        description:
          type: string
        isGood:
          type: boolean
        value: {}
    Field:
      required:
      - name
      - dtype
      - profile
      type: object
      properties:
        name:
          type: string
        shape:
          type: array
          items:
            type: integer
            format: int64
        dtype:
          type: string
        profile:
          type: string
    Map_Seq_ByFeature:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/ByFeature'
    Map_String:
      type: object
      additionalProperties:
        type: string
    Model:
      required:
      - name
      - version
      - signature
      - metadata
      type: object
      properties:
        name:
          type: string
        version:
          type: integer
          format: int64
        signature:
          $ref: '#/components/schemas/Signature'
        metadata:
          $ref: '#/components/schemas/Map_String'
        trainingDataPrefix:
          type: string
        inferenceDataPrefix:
          type: string
    Plugin:
      required:
      - name
      - description
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pluginInfo:
          $ref: '#/components/schemas/PluginInfo'
    PluginInfo:
      required:
      - addr
      - routePath
      - ngModuleName
      - remoteName
      - exposedModule
      type: object
      properties:
        addr:
          type: string
        routePath:
          type: string
        ngModuleName:
          type: string
        remoteEntry:
          type: string
        remoteName:
          type: string
        exposedModule:
          type: string
    Report:
      required:
      - pluginId
      - modelName
      - modelVersion
      - file
      - fileModifiedAt
      - featureReports
      type: object
      properties:
        pluginId:
          type: string
        modelName:
          type: string
        modelVersion:
          type: integer
          format: int64
        file:
          type: string
        fileModifiedAt:
          type: string
          format: date-time
        rowReports:
          type: array
          items:
            $ref: '#/components/schemas/ByRow'
        featureReports:
          $ref: '#/components/schemas/Map_Seq_ByFeature'
    Signature:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Field'

