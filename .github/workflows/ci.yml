name: Scala CI

on:
  workflow_dispatch:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  Test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Setup scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.11

      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '**/Dependencies.scala') }}

      - name: Initialize project
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: "sbt initialize"
    
      - name: Run tests
        run: "sbt test"

  Build_Push:
    name: Build & Push Image
    runs-on: ubuntu-20.04

    env:
      IMAGE: monitoring-manager # name of the built image
      REGISTRY: nufusrufus
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.11
      
      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '**/Dependencies.scala') }}

      - name: Initialize project
        if: steps.restore-cache.outputs.cache-hit != 'true'
        shell: bash
        run: "sbt initialize"

      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}       
      
      - name: Build docker image
        shell: bash
        run: "sbt docker:publishLocal"

      - name: Retag image
        run: "docker tag ${{ env.IMAGE }}:dev ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest"

      - name: Push image
        run: "docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest"
