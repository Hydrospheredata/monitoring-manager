name: Release

on:
  push:
    branches: 
      - master

jobs:
  Build_Push:
    runs-on: ubuntu-20.04
    env:
      HYDRO_MONITORING_REPO: ${{ github.repository_owner }}/hydro-monitoring
      IMAGE: monitoring-manager # name of the built image
      REGISTRY: hydrosphere
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.11
      
      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '**/Dependencies.scala') }}

      - name: Initialize project
        if: steps.restore-cache.outputs.cache-hit != 'true'
        shell: bash
        run: "sbt initialize"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}       
      
      - name: Build docker image
        shell: bash
        run: "sbt docker:publishLocal"

      - name: Retag image to latest version
        shell: bash
        run: "docker tag ${{ env.IMAGE }}:dev ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest"

      - name: Push latest image
        shell: bash
        run: "docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest"

      - name: Retag image for hydro-monitoring repo
        shell: bash
        run: "docker tag ${{ env.IMAGE }}:dev ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }}"

      - name: Push image for hydro-monitoring repo
        shell: bash
        run: "docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }}"

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }} 
        
      - name: Update image version in hydro-monitoring repo
        uses: aurelien-baudet/workflow-dispatch@v2.1.1
        with:
          workflow: Local release
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repo: ${{ env.HYDRO_MONITORING_REPO }}
          inputs: '{"service_image_name":"${{ env.IMAGE }}", "registry_url":"${{ env.REGISTRY }}", "tag":"${{ github.sha }}"}'
