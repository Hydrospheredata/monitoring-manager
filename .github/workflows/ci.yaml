name: Scala CI

on:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  Test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      
      - name: Setup scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.11

      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '**/Dependencies.scala') }}

      - name: Initialize project
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: "sbt initialize"
    
      - name: Run unit tests
        run: "sbt test"

      - name: Run integration tests
        run: "sbt it:test"

  Build_image:
    name: Build image and Generate docs
    runs-on: ubuntu-20.04
    env:
      IMAGE: monitoring-manager # name of the built image
      REGISTRY: hydrosphere
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.11
      
      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '**/Dependencies.scala') }}

      - name: Initialize project
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: "sbt initialize"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-       
      
      - name: Build docker image & generate docs
        run: "sbt build"

      - name: Retag image
        run: "docker tag ${{ env.IMAGE }}:dev ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest"

      - name: Push generated docs
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "docs: update openapi.yaml and config.md" -a
          git push
